import json
import pyrogram
from pyrogram import Client, filters
import requests
from pyrogram.types import InlineKeyboardMarkup, InlineKeyboardButton
import re

FontsList = {
  "Small caps" : ['ᴀ','ʙ','ᴄ','ᴅ','ᴇ','ғ','ɢ','ʜ','ɪ','ᴊ','ᴋ','ʟ','ᴍ','ɴ','ᴏ','ᴘ','ǫ','ʀ','s','ᴛ','ᴜ','ᴠ','ᴡ','x','ʏ','ᴢ','𝟶','𝟷','𝟸','𝟹','𝟺','𝟻','𝟼','𝟽','𝟾','𝟿','ᴀ','ʙ','ᴄ','ᴅ','ᴇ','ғ','ɢ','ʜ','ɪ','ᴊ','ᴋ','ʟ','ᴍ','ɴ','ᴏ','ᴘ','ǫ','ʀ','s','ᴛ','ᴜ','ᴠ','ᴡ','x','ʏ','ᴢ',' '],
  "Currency" : ['₳','฿','₵','Đ','Ɇ','₣','₲','Ⱨ','ł','J','₭','Ⱡ','₥','₦','Ø','₱','Q','Ɽ','₴','₮','Ʉ','V','₩','Ӿ','Ɏ','Ⱬ','0','1','2','3','4','5','6','7','8','9','₳','฿','₵','Đ','Ɇ','₣','₲','Ⱨ','ł','J','₭','Ⱡ','₥','₦','Ø','₱','Q','Ɽ','₴','₮','Ʉ','V','₩','Ӿ','Ɏ','Ⱬ',' '],
  "Double Struck" : ['𝔸','𝔹','ℂ','𝔻','𝔼','𝔽','𝔾','ℍ','𝕀','𝕁','𝕂','𝕃','𝕄','ℕ','𝕆','ℙ','ℚ','ℝ','𝕊','𝕋','𝕌','𝕍','𝕎','𝕏','𝕐','ℤ','𝟘','𝟙','𝟚','𝟛','𝟜','𝟝','𝟞','𝟟','𝟠','𝟡','𝕒','𝕓','𝕔','𝕕','𝕖','𝕗','𝕘','𝕙','𝕚','𝕛','𝕜','𝕝','𝕞','𝕟','𝕠','𝕡','𝕢','𝕣','𝕤','𝕥','𝕦','𝕧','𝕨','𝕩','𝕪','𝕫',' '],
  "Antrophobia" : ['α','в','¢','∂','є','f','g','н','ι','נ','к','ℓ','м','и','σ','ρ','q','я','ѕ','т','υ','ν','ω','χ','у','z','0','1','2','3','4','5','6','7','8','9','α','в','¢','∂','є','f','g','н','ι','נ','к','ℓ','м','и','σ','ρ','q','я','ѕ','т','υ','ν','ω','χ','у','z',' '],
  "Bubble" : ['Ⓐ','Ⓑ','Ⓒ','Ⓓ','Ⓔ','Ⓕ','Ⓖ','Ⓗ','Ⓘ','Ⓙ','Ⓚ','Ⓛ','Ⓜ','Ⓝ','Ⓞ','Ⓟ','Ⓠ','Ⓡ','Ⓢ','Ⓣ','Ⓤ','Ⓥ','Ⓦ','Ⓧ','Ⓨ','Ⓩ','⓪','①','②','③','④','⑤','⑥','⑦','⑧','⑨','ⓐ','ⓑ','ⓒ','ⓓ','ⓔ','ⓕ','ⓖ','ⓗ','ⓘ','ⓙ','ⓚ','ⓛ','ⓜ','ⓝ','ⓞ','ⓟ','ⓠ','ⓡ','ⓢ','ⓣ','ⓤ','ⓥ','ⓦ','ⓧ','ⓨ','ⓩ',' '],
  "Invisible Ink" : ['A҉','B҉','C҉','D҉','E҉','F҉','G҉','H҉','I҉','J҉','K҉','L҉','M҉','N҉','O҉','P҉','Q҉','R҉','S҉','T҉','U҉','V҉','W҉','X҉','Y҉','Z҉','0҉','1҉','2҉','3҉','4҉','5҉','6҉','7҉','8҉','9҉','a҉','b҉','c҉','d҉','e҉','f҉','g҉','h҉','i҉','j҉','k҉','l҉','m҉','n҉','o҉','p҉','q҉','r҉','s҉','t҉','u҉','v҉','w҉','x҉','y҉','z҉',' ҉'],
  "Fraktur" : ['𝔄','𝔅','ℭ','𝔇','𝔈','𝔉','𝔊','ℌ','ℑ','𝔍','𝔎','𝔏','𝔐','𝔑','𝔒','𝔓','𝔔','ℜ','𝔖','𝔗','𝔘','𝔙','𝔚','𝔛','𝔜','ℨ','օ','յ','շ','Յ','կ','Տ','ճ','Դ','Ց','գ','𝔞','𝔟','𝔠','𝔡','𝔢','𝔣','𝔤','𝔥','𝔦','𝔧','𝔨','𝔩','𝔪','𝔫','𝔬','𝔭','𝔮','𝔯','𝔰','𝔱','𝔲','𝔳','𝔴','𝔵','𝔶','𝔷',' '],
  "Bold Fraktur Font" : ['𝕬','𝕭','𝕮','𝕯','𝕰','𝕱','𝕲','𝕳','𝕴','𝕵','𝕶','𝕷','𝕸','𝕹','𝕺','𝕻','𝕼','𝕽','𝕾','𝕿','𝖀','𝖁','𝖂','𝖃','𝖄','𝖅','օ','յ','շ','Յ','կ','Տ','ճ','Դ','Ց','գ','𝖆','𝖇','𝖈','𝖉','𝖊','𝖋','𝖌','𝖍','𝖎','𝖏','𝖐','𝖑','𝖒','𝖓','𝖔','𝖕','𝖖','𝖗','𝖘','𝖙','𝖚','𝖛','𝖜','𝖝','𝖞','𝖟',' '],
  "Fantasy Font" : ['ꪖ','ꪉ','ᨶ','ᦔ','ꫀ','ᠻ','ᦋ','ꫝ','ỉ','᧒','ƙ','ꪶ','ꪑ','᭢','ꪮ','ᩏ','ᧁ','ꪹ','క','ᡶ','ꪊ','ꪜ','᭙','᥊','ꪗ','ɀ','੦','౹','੨','੩','੫','Ƽ','Ϭ','Դ','੪','੧','ꪖ','ꪉ','ᨶ','ᦔ','ꫀ','ᠻ','ᦋ','ꫝ','ỉ','᧒','ƙ','ꪶ','ꪑ','᭢','ꪮ','ᩏ','ᧁ','ꪹ','క','ᡶ','ꪊ','ꪜ','᭙','᥊','ꪗ','ɀ',' '],
  "Flaky Font" : ['ᗩ','ᗷ','ᑕ','ᗪ','ᗴ','ᖴ','Ǥ','ᕼ','I','ᒎ','ᛕ','ᒪ','ᗰ','ᑎ','ᗝ','ᑭ','Ɋ','ᖇ','ᔕ','丅','ᑌ','ᐯ','ᗯ','᙭','Ƴ','乙','੦','౹','੨','੩','੫','Ƽ','Ϭ','Դ','੪','੧','ᗩ','ᗷ','ᑕ','ᗪ','ᗴ','ᖴ','Ǥ','ᕼ','I','ᒎ','ᛕ','ᒪ','ᗰ','ᑎ','ᗝ','ᑭ','Ɋ','ᖇ','ᔕ','丅','ᑌ','ᐯ','ᗯ','᙭','Ƴ','乙',' '],
  "Manga Font" : ['卂','乃','匚','ᗪ','乇','千','Ꮆ','卄','丨','ﾌ','Ҝ','ㄥ','爪','几','ㄖ','卩','Ҩ','尺','丂','ㄒ','ㄩ','ᐯ','山','乂','ㄚ','乙','੦','౹','੨','੩','੫','Ƽ','Ϭ','Դ','੪','੧','卂','乃','匚','ᗪ','乇','千','Ꮆ','卄','丨','ﾌ','Ҝ','ㄥ','爪','几','ㄖ','卩','Ҩ','尺','丂','ㄒ','ㄩ','ᐯ','山','乂','ㄚ','乙',' '],
  "Block Font" : ['🇦‌','🇧‌','🇨‌','🇩‌','🇪‌','🇫‌','🇬‌','🇭‌','🇮‌','🇯‌','🇰‌','🇱‌','🇲‌','🇳‌','🇴‌','🇵‌','🇶‌','🇷‌','🇸‌','🇹‌','🇺‌','🇻‌','🇼‌','🇽‌','🇾‌','🇿‌','0','1','2','3','4','5','6','7','8','9','🇦‌','🇧‌','🇨‌','🇩‌','🇪‌','🇫‌','🇬‌','🇭‌','🇮‌','🇯‌','🇰‌','🇱‌','🇲‌','🇳‌','🇴‌','🇵‌','🇶‌','🇷‌','🇸‌','🇹‌','🇺‌','🇻‌','🇼‌','🇽‌','🇾‌','🇿‌',' '],
  "Black bubble Font" : ['🅐','🅑','🅒','🅓','🅔','🅕','🅖','🅗','🅘','🅙','🅚','🅛','🅜','🅝','🅞','🅟','🅠','🅡','🅢','🅣','🅤','🅥','🅦','🅧','🅨','🅩','⓿','➊','➋','➌','➍','➎','➏','➐','➑','➒','🅐','🅑','🅒','🅓','🅔','🅕','🅖','🅗','🅘','🅙','🅚','🅛','🅜','🅝','🅞','🅟','🅠','🅡','🅢','🅣','🅤','🅥','🅦','🅧','🅨','🅩',' '],
  "Bold Script Font" : ['𝓐','𝓑','𝓒','𝓓','𝓔','𝓕','𝓖','𝓗','𝓘','𝓙','𝓚','𝓛','𝓜','𝓝','𝓞','𝓟','𝓠','𝓡','𝓢','𝓣','𝓤','𝓥','𝓦','𝓧','𝓨','𝓩','0','1','2','3','4','5','6','7','8','9','𝓪','𝓫','𝓬','𝓭','𝓮','𝓯','𝓰','𝓱','𝓲','𝓳','𝓴','𝓵','𝓶','𝓷','𝓸','𝓹','𝓺','𝓻','𝓼','𝓽','𝓾','𝓿','𝔀','𝔁','𝔂','𝔃',' '],
  "Wierd Font" : ['Ȧ̶̵̗̳','B̟̈́̆̐̄̚͜','C̸̣̭͖̤̒̈͊͟','Ḋ̤͇̮͙ͥ','E̸̖̪̱͚ͨ̀͜','F̵̦̺͕́̐͟','G̛͔͇̞̹̈̀͘͘͟','H̶̪͍̒ͥ͑̓','I̶̴̗̗̦͍ͨͭ̉͢͟','J̸̧̪̫̫̩̿͗͑̇̕͟','K̦̖̙̱̮̐̌','L̳͈͉̅̊','M̶̷̲̊ͥ͋͟','N̰̜͉͔ͬ̽͢','O̵̷̪̰ͩ͆ͅ','P̘͎̀͊','Q̸̨͉̰̰ͬ','Ŗ̴̪̈̄͞','S̵̶̮̬͖̄͑͟','T̷̫͉̰͕̒́','U̸̫̠̰͈̕','V̷̬̈ͫ͢͢͝','W̸͈ͯ̾̒̿','X̸̵̨ͦ̒ͣ','Y̵̷̛̤͍̅́̕','Z̴̨͇͖͓̋̊','0̴̫͙͙̪̔̽̔͛͘','1̷̸̫̐͂̕','2̱̜̥̒̌̂̕͟','3̵̷̧̗͙̰̽̋͟','4̷̱ͧͩ̈̀͢͜','5̸̷͇̽̏ͥͤ','6̶̴̱ͧ̓͋̄͡','7̨͈͇̙̤ͩ͜','8̷̴̹̅̑ͬ̓͟','9̶̵̜͑͌͞','ă̶̸̝ͦ͊̿͋͞','b̵̸͙̅̽͡ͅ','c̷̹͖͋́̃','d̸̡̩͍̔ͥ͜','ę̷̵̧̖̫̗̆̊','f̷̵̫̞̉͢','g̴̶̛̮̣͙͠','h̶̯̰̝̻̿̓͢','i̵͓͙̱͚̎͟','j̧͉̺̤̎ͯ','k̶̸͙̭̹͆͟','ḻ̸͈ͧ͑̓̓̀͡','m̶̷͔ͪ̽͡','n̷̶̯͉̊̽̐ͦ͘','ȍ̸̢̢̮͚̐̚','p̶̸̨̺͊̍̒̓̀','q̷̝ͣ͑̌͢','r̶̷̲͍̭͐̾̀͟','s̩͙͖̋͛͟','t̴͕͖͓̀','û̶͙̽̿͆̈','v̸̵̝͙͆̈ͤ','ẅ̷̷̢̟͇͈̒','x̷̶͚͖͓̘̔','y̯̤͑́́̓́','z͕͓̼̼̽̃͘',' '],
  "Hand Writing" : ['𝒜','ℬ','𝒞','𝒟','ℰ','ℱ','𝒢','ℋ','ℐ','𝒥','𝒦','ℒ','ℳ','𝒩','𝒪','𝒫','𝒬','ℛ','𝒮','𝒯','𝒰','𝒱','𝒲','𝒳','𝒴','𝒵','0','1','2','3','4','5','6','7','8','9','𝒶','𝒷','𝒸','𝒹','𝑒','𝒻','𝑔','𝒽','𝒾','𝒿','𝓀','𝓁','𝓂','𝓃','𝑜','𝓅','𝓆','𝓇','𝓈','𝓉','𝓊','𝓋','𝓌','𝓍','𝓎','𝓏',' '],
  "Smooth Font" : ['α','Ⴆ','ƈ','ԃ','ҽ','ϝ','ɠ','ԋ','ι','ʝ','ƙ','ʅ','ɱ','ɳ','σ','ρ','ϙ','ɾ','ʂ','ƚ','υ','ʋ','ɯ','x','ყ','ȥ','੦','౹','੨','੩','੫','Ƽ','Ϭ','Դ','੪','੧','α','Ⴆ','ƈ','ԃ','ҽ','ϝ','ɠ','ԋ','ι','ʝ','ƙ','ʅ','ɱ','ɳ','σ','ρ','ϙ','ɾ','ʂ','ƚ','υ','ʋ','ɯ','x','ყ','ȥ',' '],
  "Symbol Fonts" : ['ꍏ','♭','☾','ᕲ','€','Ϝ','❡','♄','♗','♪','ϰ','↳','ᗰ','♫','⊙','ρ','ᵠ','☈','∫','†','☋','✓','ω','⌘','⚧','☡','⓪','➊','➋','➌','➍','➎','➏','➐','➑','➒','ꍏ','♭','☾','ᕲ','€','Ϝ','❡','♄','♗','♪','ϰ','↳','ᗰ','♫','⊙','ρ','ᵠ','☈','∫','†','☋','✓','ω','⌘','⚧','☡',' '],
  "Bold Font" : ['𝐀','𝐁','𝐂','𝐃','𝐄','𝐅','𝐆','𝐇','𝐈','𝐉','𝐊','𝐋','𝐌','𝐍','𝐎','𝐏','𝐐','𝐑','𝐒','𝐓','𝐔','𝐕','𝐖','𝐗','𝐘','𝐙','𝟎','𝟏','𝟐','𝟑','𝟒','𝟓','𝟔','𝟕','𝟖','𝟗','𝐚','𝐛','𝐜','𝐝','𝐞','𝐟','𝐠','𝐡','𝐢','𝐣','𝐤','𝐥','𝐦','𝐧','𝐨','𝐩','𝐪','𝐫','𝐬','𝐭','𝐮','𝐯','𝐰','𝐱','𝐲','𝐳',' '],
  "Italic" : ['𝘈','𝘉','𝘊','𝘋','𝘌','𝘍','𝘎','𝘏','𝘐','𝘑','𝘒','𝘓','𝘔','𝘕','𝘖','𝘗','𝘘','𝘙','𝘚','𝘛','𝘜','𝘝','𝘞','𝘟','𝘠','𝘡','0','1','2','3','4','5','6','7','8','9','𝘢','𝘣','𝘤','𝘥','𝘦','𝘧','𝘨','𝘩','𝘪','𝘫','𝘬','𝘭','𝘮','𝘯','𝘰','𝘱','𝘲','𝘳','𝘴','𝘵','𝘶','𝘷','𝘸','𝘹','𝘺','𝘻',' '],
  "Bold + Italic" : ['𝘼','𝘽','𝘾','𝘿','𝙀','𝙁','𝙂','𝙃','𝙄','𝙅','𝙆','𝙇','𝙈','𝙉','𝙊','𝙋','𝙌','𝙍','𝙎','𝙏','𝙐','𝙑','𝙒','𝙓','𝙔','𝙕','0','1','2','3','4','5','6','7','8','9','𝙖','𝙗','𝙘','𝙙','𝙚','𝙛','𝙜','𝙝','𝙞','𝙟','𝙠','𝙡','𝙢','𝙣','𝙤','𝙥','𝙦','𝙧','𝙨','𝙩','𝙪','𝙫','𝙬','𝙭','𝙮','𝙯',' '],
  "Monospace" : ['𝙰','𝙱','𝙲','𝙳','𝙴','𝙵','𝙶','𝙷','𝙸','𝙹','𝙺','𝙻','𝙼','𝙽','𝙾','𝙿','𝚀','𝚁','𝚂','𝚃','𝚄','𝚅','𝚆','𝚇','𝚈','𝚉','𝟶','𝟷','𝟸','𝟹','𝟺','𝟻','𝟼','𝟽','𝟾','𝟿','𝚊','𝚋','𝚌','𝚍','𝚎','𝚏','𝚐','𝚑','𝚒','𝚓','𝚔','𝚕','𝚖','𝚗','𝚘','𝚙','𝚚','𝚛','𝚜','𝚝','𝚞','𝚟','𝚠','𝚡','𝚢','𝚣',' '],
  "Noisy" : ['A̳̳̹̟̋ͣ͌ͅ','B̛̙̙͉̬̦̻̾͛̕͟','C͖͖̮̗̗͉̔̓ͧͨ','D̷̨̥̥̥͖̞͐ͮ̄','E̢̢̻ͮͧͦ͋͞͡','F̼̼͓̙ͤ̋̅̚͞͞','G̯̯̩̙͆ͣ͟','H͇͇̹͊ͪ́̕ͅ','I̡̨͙͙̪̹̾͟','J̸̡̡̟͑ͭ̄͘','K̭̭͔͓̦̏̎͠','Ļ͓͓̣̽͟','M͚͚̻͂̇͜͟͟','N͔͔̥̺̞̿͊̇','Ơ̷̴̪̪̝͈̥͈̆̀̚','P̤̤͖ͪ͑̕͜͜','Q̧̧̧̛͈̤̻̾̃͛','R̛̦̦̝̤͌̏͜͟͜','S̢̼̼͖̺͖ͪ','T̼̼̖̾͟͞','U̝̝̝̲̦ͣ͋͛̊','V̵̡͔͔͔̭̾̀̂̑͞','W̧̤̤͇̣̥͂͐','X̨̯̯͎̥͊̄̊͡͡ͅ','Y̧̬̬͇̖̳̏͌͞','Z̼̼̙͐̐̅͌','0̧͓͓͖̫̟̊ͫ͆͐','1̛̺̺̜͉̰ͦ','2̧̯̯̟̟̃͌̎̍','3͔͔̞̪̓͂̈́͞','4̡̤̤͖̺͚̔','5̸̰̰͙͆ͮ͌̐͜','6̗̗͉̹̜̰̃̉͌͜͟͟͝͞','7̢̧̫̫͉͆̒͛͟','8͕͕̰ͦ̒͆͛','9̪̪͉̼͛','a͔͔̜̗̦ͩ̅̎','b͔͔̳͈̊̆ͥ͂͜͝','c̨̨̣̮̝̈́̔ͯ̀͂','d̶̵̯̯̼̘ͨ̓','ḛ̡̰̳͓̥ͬ͋ͪͧ','f̰̰̯͕͊̃̊͞͞͞','g̬̬̱ͩ͋͟͟','h̨͚͚͖ͯ̒̄͗͞','i̧̻̻͉̜͑ͪ̾͟','j̺̺̭͖̘̬̃̓ͨ','k̼̼̞̦̞̼̔','l͖͖̰̝ͭ̀͘','m̰̰̹͚̙̂ͦ͗͠','n̫̫̘̗͕̲̲̎ͥ','o͙͙̙̘̙ͤͫ͞','p͔͔͚͉̬̋ͩ̾͗','q͈͈͚͑ͫ̉ͤ͟','ṛ̣̬̫̍͌ͩ͟','s̨̞̞̰͎͎̪̩͕̈́̀ͯ̍ͧͅ','t͖͖̠̬͛','ụ̴̴̾̀͟͡','v̹̹̘̼̞̻͆ͩ̓ͪ͢','w̡̻̻̣͚̒̀ͅ','x͕͕͚͍̿̆͂͞','y͙͙̪̰ͫ͌́','z̰̰̝̿ͣ͝͡͝',' '],
  "Scorer" : ['ǟ','ɮ','ƈ','ɖ','ɛ','ʄ','ɢ','ɦ','ɨ','ʝ','ӄ','ʟ','ʍ','ռ','օ','ք','զ','ʀ','ֆ','ȶ','ʊ','ʋ','ա','Ӽ','ʏ','ʐ','0','1','2','3','4','5','6','7','8','9','ǟ','ɮ','ƈ','ɖ','ɛ','ʄ','ɢ','ɦ','ɨ','ʝ','ӄ','ʟ','ʍ','ռ','օ','ք','զ','ʀ','ֆ','ȶ','ʊ','ʋ','ա','Ӽ','ʏ','ʐ',' '],
  "High Above" : ['ᵃ','ᵇ','ᶜ','ᵈ','ᵉ','ᶠ','ᵍ','ʰ','ⁱ','ʲ','ᵏ','ˡ','ᵐ','ⁿ','ᵒ','ᵖ','ᵠ','ʳ','ˢ','ᵗ','ᵘ','ᵛ','ʷ','ˣ','ʸ','ᶻ','0','1','2','3','4','5','6','7','8','9','ᵃ','ᵇ','ᶜ','ᵈ','ᵉ','ᶠ','ᵍ','ʰ','ⁱ','ʲ','ᵏ','ˡ','ᵐ','ⁿ','ᵒ','ᵖ','ᵠ','ʳ','ˢ','ᵗ','ᵘ','ᵛ','ʷ','ˣ','ʸ','ᶻ',' '],
  "Spacing" : ['Ａ','Ｂ','Ｃ','Ｄ','Ｅ','Ｆ','Ｇ','Ｈ','Ｉ','Ｊ','Ｋ','Ｌ','Ｍ','Ｎ','Ｏ','Ｐ','Ｑ','Ｒ','Ｓ','Ｔ','Ｕ','Ｖ','Ｗ','Ｘ','Ｙ','Ｚ','０','１','２','３','４','５','６','７','８','９','ａ','ｂ','ｃ','ｄ','ｅ','ｆ','ｇ','ｈ','ｉ','ｊ','ｋ','ｌ','ｍ','ｎ','ｏ','ｐ','ｑ','ｒ','ｓ','ｔ','ｕ','ｖ','ｗ','ｘ','ｙ','ｚ',' '],
  "So Hot" : ['Aͣ','B𞀓','Cͨ','Dͩ','Eͤ','F̾','G̾','Hͪ','Iͥ','J̾','K̾','L̾','Mͫ','N̾','Oͦ','P𞀐','Q̾','Rͬ','S̾','Tͭ','Uͧ','V̾','W𞀞','Xͯ','Y̾','Z̾','0̾','1̾','2̾','3̾','4̾','5̾','6̾','7̾','8̾','9̾','aͣ','b𞀓','cͨ','dͩ','eͤ','f̾','g̾','hͪ','iͥ','j̾','k̾','l̾','mͫ','n̾','oͦ','p𞀐','q̾','rͬ','s̾','tͭ','uͧ','v̾','w𞀞','xͯ','y̾','z̾',' '],
  "Zalgo" : ['A҉҉̦̣̤͔̟̩̋̿̏ͦ̈́̍͟͠','B̵̴҉̞̠̘̩͍̱́͊͗͜͠͠͠͠','C҉͓̟͇̼͕̻ͭ͌ͩ̒͘͜͡͞͠','D҉̣͍̓̎͗͜͜','E҉̰̰͎̆͞','F̶̵͖͚̯̮̤̫̿̆͌͋͢͟͡͡','G̸҉̜̜̱̄ͩ͆͜͝͞','H̴̶̵҉̨̡̛̼͎̫͓̒́̔ͩ͜͟͠͞͞','I҉̡̯̺̜̅́͋̃͢͜','J̴̵҉̣͖̃̉̓́͜͢','K҉̿ͭ͘͜','L̴҉̴͙͖̞̳̜̖ͣͧ̑̑͜͞͠͞͠','M̶̶҉̳͈̺͟͢͠͠ͅ','N̵҉̾͟͞͡','O̷̵҉̢̭͚̜̠ͫͣ͐͢͟͢͠͞͝','P҉̷̧̥͚̣̉̓̕͟͜͠͞͠͝ͅ','Q̵̴̢͕̬̒̅̊͜͜͠͠͡','R̴҉̷̨̖̮̉͑ͯ̑̋͟͠','Ṡ̷̢̫̞̻͈͋͛̓̅͜͜͜͠͠͠','T҉̘͙͖̠̓ͦ͑̄͜͜͟͞','U̵̶̸̹̮̹̲̻͙̎ͪͣͦ͜͡͞͡͡','V̶̝̐̀͟͟͝','W̵̶̸̻̼͉̱̄͗ͭ͟͢͢͠','X̵̶҉̠͉͓̝̾͟͟ͅ','Y̵̡̬͖̠̋ͫ̌ͤ̚͞͞','Z҉͆͢͠͠','0̷҉̧͇̩̪͙̏ͭͩ̂͘͟͢͜͡͞͝͞','1̴̸҉̡̛͎̤̗̘̬̊̃̓ͭͦ̇͟͡͝͠','2̶҉̹̭̟̈́ͮ͆ͦ','3҉̨͕͕̰̟̔̂́͟͢͜͝','4̷̡̳̖̆̇͘͟͟͢͝','5̵҉̣ͨ͢͜','6҉̶̙̳͉̉ͨ͂̏̃̉͜͠͠','7̷҉̴̷͚̤̙̼ͣ̆ͪ̂̚͟͢͜͡ͅ','8̴҉̣̦̳̍̋̋̀͢͟͠','9̷̵҉̲̼̻͇̠͍̍̽͌͟͞','a҉͖̟̜̞̂̃̑̽͢͢͠͡','b҉͙̺̻̥̅̎͋̕͜͝͡͞͠','c̷̶҉̵̢͚̣̻̲̬͑̑͛͐̀͜͜͜͝͡͝͠','d҉̴̷̧̢̛̖͔̤ͯ̔̑̄͢͟͡͠','e̵̡̫̫͍͕̎ͭ̐͟͟͝͞','f҉̴̥͎̰̰̒͌͛͐ͧ̕͜͝͡͞','g̷̵̸̡̼̱͎͎̞ͤͬ̅͢͟͞','h̷̶̘̘̬ͭ̏͞͡','i҉̧̯̤̙͔̑ͧ̅̔ͦ́͜͟͢͝͠','ǰ̸̶̭͓͓̀̈́͜͟ͅ','k҉̴̶̬͈̫̹͖̾̎ͭ́̍̐͜͜͝͠','l̶҉̰͚͖͕̍̈́̅͗̏̇͢͜͜͝','m̴̵҉̸̲̗̰̼͗͌̃̇͟͟͟͠͞͠','n̸͐̈́͟͟͝','o҉̢̡̲͇̌͗̀͢͝','p̷̸̷̨͙͙͇ͨ̌ͣ͋͟͢͠','q҉̧͚̰̾͋͢͟͝͡','r҉̵҉̛̠̩̥̋ͦ̆͆͟͞͡͞͠','s҉̝̭̦͚̑ͯ̌͡','t҉̷҉̢͖͔̹͛̌͊͘͜͢͠͡͡','u̶͖̖͆̊̈́͡͡','v҉̨̊͢͠͠','w҉̢̡̹̮͌̄ͦ͜͟͟͞͠͞','x҉̣ͫͧ̕͘͜','ȳ̸̵̩̜͔͍̔́͟͟͢͡','z̷҉̲ͥ͆̿̆ͭ͞',' '],
  "Square" : ['🄰','🄱','🄲','🄳','🄴','🄵','🄶','🄷','🄸','🄹','🄺','🄻','🄼','🄽','🄾','🄿','🅀','🅁','🅂','🅃','🅄','🅅','🅆','🅇','🅈','🅉','0','1','2','3','4','5','6','7','8','9','🄰','🄱','🄲','🄳','🄴','🄵','🄶','🄷','🄸','🄹','🄺','🄻','🄼','🄽','🄾','🄿','🅀','🅁','🅂','🅃','🅄','🅅','🅆','🅇','🅈','🅉',' '],
  #"Hand" : [],
  #"Hand" : [],
  #"Hand" : [],
  #"Hand" : [],
  #"Hand" : [],
  #"Hand" : [],
  #"Hand" : [],
  #"Hand" : [],
  #"Hand" : [],
  #"Hand" : [],
  #"Hand" : [],
  #"Hand" : [],
}
  
  #"Bold " : [],
AlphabetList =  "ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789abcdefghijklmnopqrstuvwxyz "
FontInOnePage = 15
async def GenerateSingleButton(Text,callback_data):
  Button = InlineKeyboardButton(Text,callback_data=callback_data)
  return Button

async def CreateFontFromText(Text,Font_Name):
  GetFontList = FontsList[Font_Name]
  TextCharchaterList = list(f"{Text}")
  TextWithFont = ""
  for i in TextCharchaterList:
    try:
      position = AlphabetList.index(i)
      CharcheterInF9nt = GetFontList[position]
      TextWithFont+=f"{CharcheterInF9nt}"
    except Exception as e:
      TextWithFont+=f"{i}"
  TextWithFont+=""
  return TextWithFont
  
def split_dict(d,n):
  keys = list(d.keys())
  for i in range(0, len(keys), n):
    yield {k: d[k] for k in keys[i: i + n]}

async def GetPageOfFont(PageNo):
  Total_Pages = []
  for item in split_dict(FontsList, FontInOnePage):
    Total_Pages.append(item)
  return Total_Pages[PageNo]
    
async def GetTotalPageAfterSplit():
  TotalFont = len(FontsList)
  print(TotalFont)
  q = int(TotalFont)//int(FontInOnePage)
  mod = TotalFont % FontInOnePage
  if mod >= 1:
    q=q+1
  print(q)
  return q

async def MakePrevNextKeyboardForFont(TotalPageFormed,CurrentPage):
  ButtonList = []
  #print("total:",TotalPageFormed)
  #print("current : ",CurrentPage)
  x1 = InlineKeyboardButton("⏮️",callback_data="['ChangePage','0']")
  if int(CurrentPage) in [0]:
    pass
  else:
    ButtonList.append(x1)
  x2 = InlineKeyboardButton("◀️",callback_data="['ChangePage','"+str(CurrentPage-1)+"']")
  if int(CurrentPage) in [0,1]:
    pass
  else:
    ButtonList.append(x2)
  x3 = InlineKeyboardButton("▶️",callback_data="['ChangePage','"+str(CurrentPage+1)+"']")
  if int(CurrentPage) in [int(TotalPageFormed),int(TotalPageFormed)-1]:
    pass
  else:
    ButtonList.append(x3)
  x4 = InlineKeyboardButton("⏭️",callback_data="['ChangePage','"+str(TotalPageFormed-1)+"']")
  if int(CurrentPage) in [int(TotalPageFormed-1),int(TotalPageFormed)]:
    pass
  else:
    ButtonList.append(x4)
  return ButtonList
  
async def GenerateButtonForF9ntList(Page_No):
  ButtonList = []
  TotalPageFormed = await GetTotalPageAfterSplit()
  #print(TotalPageFormed)
  PageOfFonts = await GetPageOfFont(Page_No)
  for Font_Name in PageOfFonts:
    Data = await CreateFontFromText(Font_Name,Font_Name)
    NewBtn = await GenerateSingleButton(Data,"['CF','" + Font_Name + "','" + str(Page_No) + "']")
    ButtonList.append(NewBtn)
  FinalKeyboard = [ButtonList[i:i+2] for i in range(0, len(ButtonList), 2)]
  x = InlineKeyboardButton("🔙",callback_data="STARTFonting")
  BackPreclvBtn =  await MakePrevNextKeyboardForFont(TotalPageFormed,Page_No)
  FinalKeyboard.append(BackPreclvBtn)
  FinalKeyboard.append([x])
  NewKeyBoard = InlineKeyboardMarkup(FinalKeyboard)
  return NewKeyBoard
